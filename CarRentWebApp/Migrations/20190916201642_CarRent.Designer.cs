// <auto-generated />
using System;
using CarRentWebApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarRentWebApp.Migrations
{
    [DbContext(typeof(academy_netContext))]
    [Migration("20190916201642_CarRent")]
    partial class CarRent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarRentWebApp.Models.CarRent", b =>
                {
                    b.Property<int>("CarRentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CarRentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarModel")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("ClientID")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<DateTime>("EndDate")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("StartDate")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CarRentID");

                    b.ToTable("CarRent");
                });

            modelBuilder.Entity("CarRentWebApp.Models.Cars", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CarID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("money");

                    b.HasKey("CarId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarRentWebApp.Models.Coupons", b =>
                {
                    b.Property<string>("CouponCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(4, 2)");

                    b.HasKey("CouponCode");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("CarRentWebApp.Models.Customers", b =>
                {
                    b.Property<int>("CostumerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CostumerID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CostumerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CarRentWebApp.Models.Permissions", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PermissionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("CarRentWebApp.Models.Reservations", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnName("CarID");

                    b.Property<int>("CostumerId")
                        .HasColumnName("CostumerID");

                    b.Property<string>("CouponCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte>("ReservStatsId")
                        .HasColumnName("ReservStatsID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("CarId", "CostumerId");

                    b.HasIndex("CostumerId");

                    b.HasIndex("CouponCode");

                    b.HasIndex("ReservStatsId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("CarRentWebApp.Models.ReservationStatuses", b =>
                {
                    b.Property<byte>("ReservStatsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ReservStatsID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("ReservStatsId");

                    b.ToTable("ReservationStatuses");
                });

            modelBuilder.Entity("CarRentWebApp.Models.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CarRentWebApp.Models.RolesPermissions", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID");

                    b.Property<int>("PermissionId")
                        .HasColumnName("PermissionID");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolesPermissions");
                });

            modelBuilder.Entity("CarRentWebApp.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Enabled");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CarRentWebApp.Models.Reservations", b =>
                {
                    b.HasOne("CarRentWebApp.Models.Cars", "Car")
                        .WithMany("Reservations")
                        .HasForeignKey("CarId")
                        .HasConstraintName("Reservations_Cars");

                    b.HasOne("CarRentWebApp.Models.Customers", "Costumer")
                        .WithMany("Reservations")
                        .HasForeignKey("CostumerId")
                        .HasConstraintName("Reservations_Customers");

                    b.HasOne("CarRentWebApp.Models.Coupons", "CouponCodeNavigation")
                        .WithMany("Reservations")
                        .HasForeignKey("CouponCode")
                        .HasConstraintName("Reservations_Coupons");

                    b.HasOne("CarRentWebApp.Models.ReservationStatuses", "ReservStats")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservStatsId")
                        .HasConstraintName("Reservations_ReservationStatuses");
                });

            modelBuilder.Entity("CarRentWebApp.Models.RolesPermissions", b =>
                {
                    b.HasOne("CarRentWebApp.Models.Permissions", "Permission")
                        .WithMany("RolesPermissions")
                        .HasForeignKey("PermissionId")
                        .HasConstraintName("RolesPermissions_Permissions");

                    b.HasOne("CarRentWebApp.Models.Roles", "Role")
                        .WithMany("RolesPermissions")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("ScreenPermissions_Roles");
                });

            modelBuilder.Entity("CarRentWebApp.Models.Users", b =>
                {
                    b.HasOne("CarRentWebApp.Models.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("Users_Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
